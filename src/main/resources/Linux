Linux采用了文件系统层次标准： FHS标准（Filesystem Hierarchy Standard）
    1.所有目录都是由根目录衍生出来的；
    2.根目录与系统的开机、修复、还原密切相关；
bin和sbin目录下存放的文件都是可执行文件

/lost+found/	当系统意外崩溃或意外关机时，产生的一些文件碎片会存放在这里。在系统启动的过程中，fsck 工具会检查这里，并修复已经损坏的文件系统。这个目录只在每个分区中出现，例如，/lost+found 就是根分区的备份恢复目录，/boot/lost+found 就是 /boot 分区的备份恢复目录
/proc/	虚拟文件系统。该目录中的数据并不保存在硬盘上，而是保存到内存中。主要保存系统的内核、进程、外部设备状态和网络状态等。如 /proc/cpuinfo 是保存 CPU 信息的，/proc/devices 是保存设备驱动的列表的，/proc/filesystems 是保存文件系统列表的，/proc/net 是保存网络协议信息的......
/sys/	虚拟文件系统。和 /proc/ 目录相似，该目录中的数据都保存在内存中，主要保存与内核相关的信息

usr（注意不是 user），全称为 Unix Software Resource： 用来存储存储系统软件资源，应把软件产品的数据合理的放置在 /usr 目录下的各子目录中，而不是为他们的产品创建单独的目录。
Linux 系统中，所有系统默认的软件都存储在 /usr 目录下，/usr 目录类似 Windows 系统中 C:\Windows\ + C:\Program files\ 两个目录的综合体


答案是用户的主目录或 /tmp/ 临时目录。但是要小心有些目录中不能直接修改和保存数据，比如 /proc/fn/sys/ 目录，因为它们是保存在内存中的，如果在这里写入数据，那么你的内存会越来越小，直至死机；
/boot/ 目录也不能保存额外数据，因为 /boot/ 目录会单独分区作为启动分区，如果没有空闲空间，则会导致系统不能正常启动。


linux常见的三种用户方式（文件所有者，所属群组，其他用户）
ACL（access control list）访问控制列表
如何查看当前目录有没有ACL权限，文件显现末尾自动带有+号
setfacl -k project

    例子：递归设置ACL权限setfacl -m u:st:rx -R project
    删除指定的ACL权限setfacl -x u:st project
    删除指定文件的所有ACL权限： setfacl -b project

linux设置访问权限：
   1.umask: 默认创建文件或文件的默认权限（0022管理员）（0002普通用户）
    文件的最高权限为666-rw-rw-rw-，文件夹的最高权限为777drwxrwxrwx
   2.所以在创建文件file的的时候默认为：
    初始文件的权限 = 文件最大的默认权限 - umask用来设定文件和目录的默认权限（022） -----w--w-
    root create file (-rw-r--r--)
   3.umask可以修改默认的权限（umask 033临时修改）
    vim /etc/profile (永久修改)
    if [ $UID -gt 199 ] && [ "`/usr/bin/id -gn`" = "`/usr/bin/id -un`" ]; then
        umask 002
    else
        umask 022
    fi


mask权限：
    1.通过给指定用户设置访问权限 setfacl -m u:st:rx /project
    2.mask权限值得是用户或群组能拥有的最大ACL权限，所以给定用户和组的权限不能超过mask规定的权限范围，超出部分做无效处理
    注意：
        如果要修改mask的权限，使用格式 m:权限
        setfacl -m m:rx /project


s权限： SetUID(SUID)
    1.除了rwx权限之外，还有s权限ls -l /usr/bin/passwd
    -rwsr-xr-x. 1 root root 22984 Jan  7  2007 /usr/bin/passwd
    2.linux的密码存放在/etc/shadow中，普通用户是没有权限进行密码修改的，但是s权限意味着在执行某条指令的时候，当前用户是拥有root权限的，随即之后消失

    **SetGID(SGID)
     ll /usr/bin/locate
    -rwx--s--x. 1 root slocate 35612 8月24 2010 /usr/bin/locate
    1.SGID 只针对可执行文件有效，换句话说，只有可执行文件才可以被赋予 SGID 权限，普通文件赋予 SGID 没有意义。
    用户需要对此可执行文件有 x 权限；
    也就是说当执行某条命令的时候，自动切换为所属组的权限
    2.举例用例：
        创建一个测试目录test
        给test赋予setGID的权限chmod g+s test
        再一次修改目录权限，使普通用户一样可以对test可以写chmod 777 test
        切换至普通用户对test目录进行操作，创建文件或目录，创建完成之后查看所属权限依然属于root用户权限


chattr指令： 用来修改文件或目录的隐藏属性，只有root用户可以使用
    chattr [+-=] [属性-i-a-u-s] 文件或目录名
    + 表示给文件或目录添加属性，- 表示移除文件或目录拥有的某些属性，= 表示给文件或目录设定一些属性。

    i	如果对文件设置 i 属性，那么不允许对文件进行删除、改名，也不能添加和修改数据；
        如果对目录设置 i 属性，那么只能修改目录下文件中的数据，但不允许建立和删除文件；
    a	如果对文件设置 a 属性，那么只能在文件中増加数据，但是不能删除和修改数据；
        如果对目录设置 a 属性，那么只允许在目录中建立和修改文件，但是不允许删除文件；
    u	设置此属性的文件或目录，在删除时，其内容会被保存，以保证后期能够恢复，常用来防止意外删除文件或目录。
    s	和 u 相反，删除文件或目录时，会被彻底删除（直接从硬盘上删除，然后用 0 填充所占用的区域），不可恢复。


lsattr 查看文件或目录的隐藏属性
    lsattr [选项] 文件或目录名
    -a：后面不带文件或目录名，表示显示所有文件和目录（包括隐藏文件和目录）
    -d：如果目标是目录，只会列出目录本身的隐藏属性，而不会列出所含文件或子目录的隐藏属性信息；
    -R：和 -d 恰好相反，作用于目录时，会连同子目录的隐藏信息数据也一并显示出来。


sudo指令：
    sudo [-b] [-u 新使用者账号] 要执行的命令
    -b  ：将后续的命令放到背景中让系统自行运行，不对当前的 shell 环境产生影响。
    -u  ：后面可以接欲切换的用户名，若无此项则代表切换身份为 root 。
    -l：此选项的用法为 sudo -l，用于显示当前用户可以用 sudo 执行那些命令。
